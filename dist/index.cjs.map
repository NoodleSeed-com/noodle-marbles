{"version":3,"file":"index.cjs","sources":["../src/Marble.tsx"],"sourcesContent":["import * as React from \"react\";\nimport clsx from \"clsx\";\nimport { MarbleProps, Bubble, Highlight } from \"./types\";\n\n// Color palette extracted from the reference images\nconst BUBBLE_COLORS = {\n  teal: [\"#00bec1\", \"#4dd0e1\", \"#80deea\"],\n  pink: [\"#fbc0c4\", \"#f8bbd9\", \"#f48fb1\"],\n  purple: [\"#ad9db5\", \"#ce93d8\", \"#ba68c8\"],\n  white: [\"#ffffff\", \"#f5f5f5\", \"#e8eaf6\"],\n};\n\n// Gradient patterns for varied visual effects\nconst GRADIENT_PATTERNS = [\n  { cx: \"50%\", cy: \"30%\", r: \"70%\" }, // Center-out radial (classic)\n  { cx: \"30%\", cy: \"40%\", r: \"80%\" }, // Off-center radial (dynamic)\n  { cx: \"50%\", cy: \"20%\", r: \"60%\" }, // Top-heavy radial (depth)\n  { cx: \"70%\", cy: \"50%\", r: \"75%\" }, // Side-lit radial (dramatic)\n  { cx: \"50%\", cy: \"70%\", r: \"65%\" }, // Bottom-up radial (grounded)\n];\n\n// Color validation and utility functions\nconst isValidHexColor = (color: string): boolean => {\n  return /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(color);\n};\n\nconst generateFallbackColor = (): string => {\n  const fallbacks = [\"#6366f1\", \"#8b5cf6\", \"#06b6d4\", \"#10b981\", \"#f59e0b\"];\n  return fallbacks[Math.floor(Math.random() * fallbacks.length)];\n};\n\nconst validateAndNormalizeColors = (input: string | string[]): string[] => {\n  const colors = Array.isArray(input) ? input : [input];\n  const validColors: string[] = [];\n\n  colors.forEach((color) => {\n    if (isValidHexColor(color)) {\n      validColors.push(color);\n    } else {\n      if (process.env.NODE_ENV === \"development\") {\n        console.warn(`Invalid color \"${color}\", using fallback`);\n      }\n      validColors.push(generateFallbackColor());\n    }\n  });\n\n  // Ensure at least one color\n  if (validColors.length === 0) {\n    if (process.env.NODE_ENV === \"development\") {\n      console.warn(\"No valid colors provided, using default\");\n    }\n    return [\"#6366f1\"]; // Default brand-safe blue\n  }\n\n  return validColors;\n};\n\n// Color conversion utilities\nconst hexToHsl = (hex: string): { h: number; s: number; l: number } => {\n  const r = parseInt(hex.slice(1, 3), 16) / 255;\n  const g = parseInt(hex.slice(3, 5), 16) / 255;\n  const b = parseInt(hex.slice(5, 7), 16) / 255;\n\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  let h = 0;\n  let s = 0;\n  const l = (max + min) / 2;\n\n  if (max !== min) {\n    const d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n\n  return { h: h * 360, s, l };\n};\n\nconst hslToHex = (h: number, s: number, l: number): string => {\n  h = ((h % 360) + 360) % 360; // Normalize hue\n  s = Math.max(0, Math.min(1, s)); // Clamp saturation\n  l = Math.max(0, Math.min(1, l)); // Clamp lightness\n\n  const c = (1 - Math.abs(2 * l - 1)) * s;\n  const x = c * (1 - Math.abs(((h / 60) % 2) - 1));\n  const m = l - c / 2;\n  let r = 0,\n    g = 0,\n    b = 0;\n\n  if (0 <= h && h < 60) {\n    r = c;\n    g = x;\n    b = 0;\n  } else if (60 <= h && h < 120) {\n    r = x;\n    g = c;\n    b = 0;\n  } else if (120 <= h && h < 180) {\n    r = 0;\n    g = c;\n    b = x;\n  } else if (180 <= h && h < 240) {\n    r = 0;\n    g = x;\n    b = c;\n  } else if (240 <= h && h < 300) {\n    r = x;\n    g = 0;\n    b = c;\n  } else if (300 <= h && h < 360) {\n    r = c;\n    g = 0;\n    b = x;\n  }\n\n  const toHex = (n: number) => {\n    const hex = Math.round((n + m) * 255).toString(16);\n    return hex.length === 1 ? \"0\" + hex : hex;\n  };\n\n  return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\n};\n\n// Color harmony generation functions\nconst generateTriadicHarmony = (baseColor: string): string[] => {\n  const hsl = hexToHsl(baseColor);\n  return [\n    baseColor,\n    hslToHex((hsl.h + 120) % 360, hsl.s, hsl.l),\n    hslToHex((hsl.h + 240) % 360, hsl.s, hsl.l),\n  ];\n};\n\nconst generateAnalogousHarmony = (baseColor: string): string[] => {\n  const hsl = hexToHsl(baseColor);\n  return [\n    hslToHex((hsl.h - 30 + 360) % 360, hsl.s, hsl.l),\n    baseColor,\n    hslToHex((hsl.h + 30) % 360, hsl.s, hsl.l),\n  ];\n};\n\nconst generateComplementaryHarmony = (baseColor: string): string[] => {\n  const hsl = hexToHsl(baseColor);\n  return [\n    baseColor,\n    hslToHex((hsl.h + 180) % 360, hsl.s, hsl.l),\n    hslToHex(hsl.h, hsl.s * 0.3, 0.9), // Neutral tint\n  ];\n};\n\nconst generateMonochromaticHarmony = (baseColor: string): string[] => {\n  const hsl = hexToHsl(baseColor);\n  return [\n    hslToHex(hsl.h, hsl.s, Math.min(hsl.l + 0.3, 0.9)), // Lighter\n    baseColor,\n    hslToHex(hsl.h, hsl.s, Math.max(hsl.l - 0.3, 0.1)), // Darker\n  ];\n};\n\nconst generateColorHarmonies = (\n  colors: string[],\n  harmonyType: string = \"triadic\"\n): string[][] => {\n  return colors.map((color) => {\n    switch (harmonyType) {\n      case \"triadic\":\n        return generateTriadicHarmony(color);\n      case \"analogous\":\n        return generateAnalogousHarmony(color);\n      case \"complementary\":\n        return generateComplementaryHarmony(color);\n      case \"monochromatic\":\n        return generateMonochromaticHarmony(color);\n      default:\n        return generateTriadicHarmony(color);\n    }\n  });\n};\n\nconst generateBubbleGradient = (baseColor: string): string[] => {\n  const hsl = hexToHsl(baseColor);\n  return [\n    hslToHex(hsl.h, hsl.s * 0.7, Math.min(hsl.l + 0.2, 0.9)), // Light center\n    baseColor, // Mid\n    hslToHex(hsl.h, hsl.s * 1.2, Math.max(hsl.l - 0.2, 0.1)), // Dark edge\n  ];\n};\n\n// Convert string to a numeric hash\nconst stringToHash = (str: string): number => {\n  let hash = 0;\n  if (str.length === 0) return hash;\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash; // Convert to 32-bit integer\n  }\n  return Math.abs(hash);\n};\n\n// Simple seeded random number generator\nclass SeededRandom {\n  private seed: number;\n\n  constructor(seed: number) {\n    this.seed = seed % 2147483647;\n    if (this.seed <= 0) this.seed += 2147483646;\n  }\n\n  next(): number {\n    this.seed = (this.seed * 16807) % 2147483647;\n    return (this.seed - 1) / 2147483646;\n  }\n\n  range(min: number, max: number): number {\n    return min + this.next() * (max - min);\n  }\n}\n\nconst generateBubbles = (\n  seed: number,\n  variant: string,\n  color?: string | string[],\n  harmonyType: string = \"triadic\"\n): Bubble[] => {\n  const rng = new SeededRandom(seed);\n  const bubbles: Bubble[] = [];\n\n  let colorSchemes: string[][];\n\n  if (color) {\n    // Use new color harmony system\n    const validatedColors = validateAndNormalizeColors(color);\n    const harmonies = generateColorHarmonies(validatedColors, harmonyType);\n\n    // Create color schemes from harmonies\n    colorSchemes = [];\n    harmonies.forEach((harmony) => {\n      harmony.forEach((harmonyColor) => {\n        colorSchemes.push(generateBubbleGradient(harmonyColor));\n      });\n    });\n  } else {\n    // Fallback to variant system\n    const variantSchemes = {\n      primary: [BUBBLE_COLORS.teal, BUBBLE_COLORS.pink, BUBBLE_COLORS.white],\n      secondary: [\n        BUBBLE_COLORS.pink,\n        BUBBLE_COLORS.purple,\n        BUBBLE_COLORS.white,\n      ],\n      tertiary: [BUBBLE_COLORS.purple, BUBBLE_COLORS.teal, BUBBLE_COLORS.white],\n    };\n\n    colorSchemes =\n      variantSchemes[variant as keyof typeof variantSchemes] ||\n      variantSchemes.primary;\n  }\n\n  // Generate 4-6 bubbles for layered effect\n  const bubbleCount = Math.floor(rng.range(4, 7));\n\n  for (let i = 0; i < bubbleCount; i++) {\n    const gradientPattern = GRADIENT_PATTERNS[i % GRADIENT_PATTERNS.length];\n\n    const bubble: Bubble = {\n      id: `bubble-${seed}-${i}`,\n      cx: rng.range(20, 80), // Position as percentage\n      cy: rng.range(20, 80),\n      r: rng.range(25, 60), // Radius as percentage\n      colors: colorSchemes[i % colorSchemes.length],\n      opacity: rng.range(0.4, 0.9),\n      animationDuration: rng.range(3, 8), // 3-8 seconds for faster movement\n      animationDelay: rng.range(0, 2), // 0-2 second delay\n      animationDirection: rng.next() > 0.5 ? \"alternate\" : \"normal\",\n      gradientPattern, // Add gradient pattern for varied effects\n    };\n    bubbles.push(bubble);\n  }\n\n  // Sort by radius (largest first) for proper layering\n  return bubbles.sort((a, b) => b.r - a.r);\n};\n\nconst generateHighlight = (seed: number): Highlight => {\n  const rng = new SeededRandom(seed + 1000); // Offset seed for highlight\n\n  return {\n    id: `highlight-${seed}`,\n    cx: rng.range(40, 60), // More centered horizontally\n    cy: rng.range(40, 50), // Can appear in upper or lower half\n    rx: rng.range(12, 20), // Larger horizontal radius\n    ry: rng.range(15, 25), // Larger vertical radius\n    opacity: rng.range(0.6, 0.8), // More prominent opacity\n  };\n};\n\nexport const Marble = ({\n  size = 100,\n  seed = \"default\",\n  className = \"\",\n  variant = \"primary\",\n  color,\n  harmonyType = \"triadic\",\n  blendMode = \"multiply\",\n  animated = false,\n  rotate = false,\n  borderWidth = 30,\n  borderColor = \"rgba(255, 255, 255, 1)\",\n}: MarbleProps) => {\n  // Sanitize seed by replacing spaces with dashes to prevent SVG ID issues\n  const sanitizedSeed = React.useMemo(() => seed.replace(/\\s+/g, \"-\"), [seed]);\n  const numericSeed = React.useMemo(\n    () => stringToHash(sanitizedSeed),\n    [sanitizedSeed]\n  );\n  const bubbles = React.useMemo(\n    () => generateBubbles(numericSeed, variant, color, harmonyType),\n    [numericSeed, variant, color, harmonyType]\n  );\n  const highlight = React.useMemo(\n    () => generateHighlight(numericSeed),\n    [numericSeed]\n  );\n\n  return (\n    <div\n      className={clsx(\"relative overflow-hidden rounded-full\", className)}\n      style={{\n        width: size,\n        height: size,\n      }}\n    >\n      <svg\n        width=\"100%\"\n        height=\"100%\"\n        viewBox=\"0 0 100 100\"\n        className=\"absolute inset-0\"\n      >\n        <defs>\n          {/* Circular clipping mask */}\n          <clipPath id={`clip-${sanitizedSeed}`}>\n            <circle cx=\"50\" cy=\"50\" r=\"50\" />\n          </clipPath>\n\n          {bubbles.map((bubble) => (\n            <radialGradient\n              key={bubble.id}\n              id={bubble.id}\n              cx={bubble.gradientPattern?.cx || \"50%\"}\n              cy={bubble.gradientPattern?.cy || \"30%\"}\n              r={bubble.gradientPattern?.r || \"70%\"}\n            >\n              <stop\n                offset=\"0%\"\n                stopColor={bubble.colors[0]}\n                stopOpacity={bubble.opacity}\n              />\n              <stop\n                offset=\"40%\"\n                stopColor={bubble.colors[1]}\n                stopOpacity={bubble.opacity * 0.7}\n              />\n              <stop\n                offset=\"100%\"\n                stopColor={bubble.colors[2]}\n                stopOpacity={bubble.opacity * 0.3}\n              />\n            </radialGradient>\n          ))}\n\n          {/* Base gradient for overall cohesion */}\n          <radialGradient\n            id={`base-gradient-${sanitizedSeed}`}\n            cx=\"50%\"\n            cy=\"50%\"\n            r=\"50%\"\n          >\n            <stop offset=\"0%\" stopColor=\"#ffffff\" stopOpacity=\"0.2\" />\n            <stop offset=\"100%\" stopColor=\"#f8fafc\" stopOpacity=\"0.05\" />\n          </radialGradient>\n\n          {/* Highlight gradient */}\n          <radialGradient id={highlight.id} cx=\"50%\" cy=\"30%\" r=\"80%\">\n            <stop\n              offset=\"0%\"\n              stopColor=\"#ffffff\"\n              stopOpacity={highlight.opacity}\n            />\n            <stop\n              offset=\"60%\"\n              stopColor=\"#ffffff\"\n              stopOpacity={highlight.opacity * 0.5}\n            />\n            <stop offset=\"100%\" stopColor=\"#ffffff\" stopOpacity=\"0\" />\n          </radialGradient>\n        </defs>\n\n        {/* Group wrapper for rotation animation */}\n        <g clipPath={`url(#clip-${sanitizedSeed})`}>\n          {rotate && (\n            <animateTransform\n              attributeName=\"transform\"\n              type=\"rotate\"\n              values=\"0 50 50; 360 50 50\"\n              dur=\"16s\"\n              repeatCount=\"indefinite\"\n            />\n          )}\n\n          {/* Background circle */}\n          <circle\n            cx=\"50\"\n            cy=\"50\"\n            r=\"50\"\n            fill={\n              color\n                ? bubbles.length > 0\n                  ? bubbles[0].colors[2] // Use the third color of first bubble\n                  : \"#f8fafc\"\n                : variant === \"primary\"\n                ? \"#e0f7fa\"\n                : variant === \"secondary\"\n                ? \"#fce4ec\"\n                : \"#f3e5f5\"\n            }\n            opacity={color ? 0.3 : 1}\n          />\n\n          {/* Render bubbles */}\n          {bubbles.map((bubble) => (\n            <circle\n              key={bubble.id}\n              cx={bubble.cx}\n              cy={bubble.cy}\n              r={bubble.r}\n              fill={`url(#${bubble.id})`}\n              style={{\n                mixBlendMode: blendMode,\n              }}\n            >\n              {animated && (\n                <animateTransform\n                  attributeName=\"transform\"\n                  type=\"translate\"\n                  values={`0,0; ${bubble.cx > 50 ? -5 : 5},${\n                    bubble.cy > 50 ? -4 : 4\n                  }; 0,0`}\n                  dur={`${bubble.animationDuration}s`}\n                  begin={`${bubble.animationDelay}s`}\n                  repeatCount=\"indefinite\"\n                  calcMode=\"spline\"\n                  keySplines=\"0.4 0 0.6 1; 0.4 0 0.6 1\"\n                  keyTimes=\"0; 0.5; 1\"\n                />\n              )}\n            </circle>\n          ))}\n\n          {/* Overlay for subtle highlight */}\n          <circle\n            cx=\"50\"\n            cy=\"50\"\n            r=\"50\"\n            fill={`url(#base-gradient-${sanitizedSeed})`}\n          />\n\n          {/* Dynamic white highlight blob */}\n          <ellipse\n            cx={highlight.cx}\n            cy={highlight.cy}\n            rx={highlight.rx}\n            ry={highlight.ry}\n            fill={`url(#${highlight.id})`}\n            style={{\n              mixBlendMode: \"screen\",\n            }}\n          >\n            {animated && (\n              <>\n                <animateTransform\n                  attributeName=\"transform\"\n                  type=\"translate\"\n                  values={`0,0; ${highlight.cx > 50 ? -3 : 3},${\n                    highlight.cy > 50 ? -2.5 : 2.5\n                  }; 0,0`}\n                  dur=\"5s\"\n                  begin=\"0.5s\"\n                  repeatCount=\"indefinite\"\n                  calcMode=\"spline\"\n                  keySplines=\"0.4 0 0.6 1; 0.4 0 0.6 1\"\n                  keyTimes=\"0; 0.5; 1\"\n                />\n                <animate\n                  attributeName=\"opacity\"\n                  values={`0.2; ${highlight.opacity}; 0.2`}\n                  dur=\"3s\"\n                  begin=\"0s\"\n                  repeatCount=\"indefinite\"\n                />\n              </>\n            )}\n          </ellipse>\n\n          {/* Enhanced border effect */}\n          {borderWidth > 0 && (\n            <>\n              <circle\n                cx=\"50\"\n                cy=\"50\"\n                r=\"49\"\n                fill=\"none\"\n                stroke={borderColor}\n                strokeWidth={borderWidth}\n              />\n              <circle\n                cx=\"50\"\n                cy=\"50\"\n                r=\"47.5\"\n                fill=\"none\"\n                stroke=\"rgba(255, 255, 255, 0.4)\"\n                strokeWidth=\"1\"\n              />\n            </>\n          )}\n        </g>\n      </svg>\n    </div>\n  );\n};\n"],"names":["React"],"mappings":"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"}